#!/usr/bin/env python3

import optparse

import resources.bgp

if __name__ == "__main__":
    formatters = {
        "bird": resources.bgp.BirdFormatter,
        "quagga": resources.bgp.QuaggaFormatter,
    }

    parser = optparse.OptionParser()
    parser.add_option("-f", "--format", dest="fmt",
                      help="""Create config in format FMT.
                              Possible values: {}. Default: bird""".format(
                              ", ".join(formatters.keys())),
                      metavar="FMT",
                      choices=list(formatters.keys()),
                      default="bird")
    parser.add_option("-4", dest="family", action="store_const", const="ipv4",
                      help="Generate IPv4 config")
    parser.add_option("-6", dest="family", action="store_const", const="ipv6",
                      help="Generate IPv6 config")
    parser.add_option("-s", "--sourcedir", dest="src",
                      help="""Use files in DIR as input files.
                              Default: ../icvpn-meta/""", metavar="DIR",
                      default="../icvpn-meta/")
    parser.add_option("-x", "--exclude", dest="exclude", action="append",
                      help="Exclude the comma-separated list of COMMUNITIES",
                      metavar="COMMUNITIES",
                      default=[])
    parser.add_option("-p", "--prefix", dest="prefix",
                      help="Prefix, e.g. bgp_icvpn_",
                      metavar="PREFIX",
                      default="")
    parser.add_option("-P", "--passive-offline", dest="passive_offline",
                      help="""Add peers that take longer than TIMEOUT to
                              respond at time of creation as passive peers
                              Set to 0 do disable
                              Default: 3 seconds""",
                      default=3, type="float", metavar="TIMEOUT", )
    parser.add_option("-d", "--default", dest="defaulttemplate",
                      help="Default template/peer-group to use",
                      metavar="TEMPLATE",
                      default=None)
    parser.add_option("-t", "--template", dest="templates", action="append",
                      help="Use different template/peer-group for some " +
                           "communities",
                      metavar="COMMUNITY:TEMPLATE",
                      default=[])
    parser.set_defaults(family="ipv6")

    (options, args) = parser.parse_args()

    resources.bgp.create_config(options.src, set(options.exclude), options.prefix,
                                options.defaulttemplate, options.templates,
                                options.family, formatters[options.fmt],
                                options.passive_offline)
